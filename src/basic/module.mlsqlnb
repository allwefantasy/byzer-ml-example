[{"kind":1,"language":"markdown","value":"# Byzer Module","outputs":[]},{"kind":1,"language":"markdown","value":"## Call code in an external module\n\nWhen you need your code to do something that might have been implemented by someone else, you can look for a package that has functions you can use in your code.\n\n[lib-core](https://gitee.com/allwefantasy/lib-core) is a module \nmaintained by [allwefantasy](https://github.com/allwefantasy). There are \nmany example scripts in this module.\n\nIn your code, you can use `include` statement to add new module requirements.","outputs":[]},{"kind":2,"language":"mlsql","value":"include lib.`gitee.com/allwefantasy/lib-core`\nwhere alias=\"libCore\";","outputs":[{"mime":"x-application/mlsql-notebook","value":"{\n\t\"schema\": {\n\t\t\"type\": \"struct\",\n\t\t\"fields\": []\n\t},\n\t\"data\": []\n}"}]},{"kind":1,"language":"markdown","value":"import package `udf.hello` from module libCore which is also use `include`.\n\nScript hello contains a native UDF hello implemented by scala.","outputs":[]},{"kind":2,"language":"mlsql","value":"include local.`libCore.udf.hello`;\nselect hello() as name as output;","outputs":[{"mime":"x-application/mlsql-notebook","value":"{\n\t\"schema\": {\n\t\t\"type\": \"struct\",\n\t\t\"fields\": [\n\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"nullable\": true,\n\t\t\t\t\"metadata\": {}\n\t\t\t}\n\t\t]\n\t},\n\t\"data\": [\n\t\t{\n\t\t\t\"name\": \"hello world\"\n\t\t}\n\t]\n}"}]},{"kind":1,"language":"markdown","value":"If you want to use a module in your project, you can use `include` to include it.\nHowever, there are some differences between the Byzer Notebook and Byzer Desktop.\nIn the Byzer Notebook, you should use `http` to include the module, and in the Byzer Desktop, you should use `project` to include the module.\n\nHere is an example of using the `include` statement in the Byzer Notebookï¼š\n\n```sql\ninclude http.`project.demo.udfs#1`;\n```\n\nThe code above is used to include the first cell in  notebook `udfs` in `demo` directory.\n\nThe `include` statement in the Byzer Desktop is as follows:\n\n```sql\ninclude project.`./src/common/echo.mlsql`;\n```\n\nThe code above is used to include the `echo.mlsql` file in the `./src/common` directory. You can find the file in the left Explorer of vscode.","outputs":[]},{"kind":2,"language":"mlsql","value":"-- here we show you how to include a module in byzer deskop project\nset echo=\"hello world\";\ninclude project.`./src/common/echo.mlsql`;","outputs":[{"mime":"x-application/mlsql-notebook","value":"{\n\t\"schema\": {\n\t\t\"type\": \"struct\",\n\t\t\"fields\": [\n\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"nullable\": false,\n\t\t\t\t\"metadata\": {}\n\t\t\t}\n\t\t]\n\t},\n\t\"data\": [\n\t\t{\n\t\t\t\"name\": \"hello world\"\n\t\t}\n\t]\n}"}]}]